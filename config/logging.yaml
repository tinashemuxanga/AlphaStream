version: 1
disable_existing_loggers: false

formatters:
  default:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  detailed:
    format: '%(asctime)s - %(name)s - %(levelname)s - [%(filename)s:%(lineno)d] - %(funcName)s() - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  json:
    class: pythonjsonlogger.jsonlogger.JsonFormatter
    format: '%(asctime)s %(name)s %(levelname)s %(message)s'

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: default
    stream: ext://sys.stdout
  
  file_info:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/alphastream.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8
  
  file_error:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/errors.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8
  
  file_debug:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: detailed
    filename: logs/debug.log
    maxBytes: 52428800  # 50MB
    backupCount: 3
    encoding: utf8
  
  performance:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/performance.json
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8

loggers:
  ml:
    level: DEBUG
    handlers: [console, file_info, file_debug]
    propagate: false
  
  backtesting:
    level: INFO
    handlers: [console, file_info]
    propagate: false
  
  api:
    level: INFO
    handlers: [console, file_info, file_error]
    propagate: false
  
  performance:
    level: INFO
    handlers: [performance]
    propagate: false
  
  data_validation:
    level: WARNING
    handlers: [console, file_info, file_error]
    propagate: false

root:
  level: INFO
  handlers: [console, file_info, file_error]
